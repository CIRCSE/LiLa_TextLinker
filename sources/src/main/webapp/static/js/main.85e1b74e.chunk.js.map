{"version":3,"sources":["components/Token.jsx","components/Sentence.jsx","utils/Utils.js","components/ConfirmDialog.jsx","components/TTLFormDialog.jsx","utils/Sparql.js","utils/SparqlQueriesTemplate.js","utils/RDFListItem.jsx","LiLaObjectsFacets/LexicalResources/LiLaBrillLexicon.jsx","LiLaObjectsFacets/LexicalResources/LiLaLatinAffectusLexicon.jsx","LiLaObjectsFacets/LexicalResources/LiLaIGVLLLexicon.jsx","LiLaObjectsFacets/LexicalResources/LiLaLWNLexicon.jsx","LiLaObjectsFacets/LexicalResources/LiLaLewisShortLexicon.jsx","LiLaObjectsFacets/LiLaLexicalResources.jsx","LiLaObjectsFacets/LiLaLemma.jsx","components/LemmaSheet.jsx","components/LemmaSpotlight.jsx","components/LiLaKnowledge.jsx","components/AlertDialog.jsx","Views/MainView.jsx","App.js","index.js"],"names":["Token","props","handleTokenClick","tokenClick","selectAmbiguousLemma","lemma","me","linked","setState","linking","refresh","unlinkLemma","getTokenData","state","linkingElements","data","upos","token","spaceAfter","linkingClass","this","length","title","className","onClick","e","Component","Sentence","tokens","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","MyButton","withStyles","theme","root","borderColor","backgroundColor","Button","MyTextField","fontFamily","TextField","MyTooltip","tooltip","Tooltip","Transition","React","forwardRef","ref","Slide","direction","ConfirmDialog","sendResponse","val","confirmResult","ThemeProvider","createMuiTheme","dark","Dialog","open","TransitionComponent","onClose","keepMounted","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","style","paddingTop","DialogContentText","DialogActions","autoFocus","palette","type","TTLFormDialog","handleClose","handleSubmit","includes","submitTTLForm","documentTitle","documentAuthor","documentPublisher","documentNamespace","sentenceDivision","documentDescription","sessionId","window","theTimeStamp","confirmDialogShow","confirmDialogResponse","submitToTriplesore","validateForm","trim","target","textContent","docPubInError","docPubHelperText","docTitleInError","docTitleHelperText","FormControl","component","width","required","error","name","fullWidth","value","onChange","event","label","defaultValue","margin","helperText","multiline","rows","result","executeSparql","query","endpoint","callback","$","ajax","url","encodeURIComponent","async","dataType","success","results","Papa","header","skipEmptyLines","listOfPrefix","prefix","uri","translatePrefix","String","out","forEach","object","startsWith","replace","getLabel","res","getLemmaBankQuery","RDFListItem","item","lbs","push","predicate","join","LiLaBrillLexicon","lexiconName","etymons","cognate","lexicon","lexicalEntry","etyms","etym","cognateLemma","language","etymonLanguage","etymon","marginLeft","marginTop","rel","map","ety","LiLaLatinAffectusLexicon","polarity","polarities","polars","polarityItem","polarityValue","parseFloat","polar","LiLaIGVLLLexicon","entries","etrs","entry","etymo","belief","subterms","LiLaLWNLexicon","senses","WNsenses","sensesItem","collectedSenses","_","sense","definition","def","princetonLink","synLink","relations","undefined","relType","pTLabel","relSyn","defRel","LiLaLewisShortLexicon","definitions","defs","definitionItem","defsString","listStyle","LiLaLexicalResources","resources","lexicalEntries","le","fontSize","fontWeight","LiLaLemma","sheetLemmaContent","link","elements","hasOwnProperty","elementLines","Object","keys","pred","padding","display","justifyContent","selectedToken","alignItems","size","height","LinkOff","cursor","LemmaSheet","LemmaSpotlight","getLemmas","string","getLemmaStartingWith","lemmaSearchChange","lemmasearch","timeout","clearTimeout","setTimeout","runningQuery","handleToolTipOpen","ttcontent","theQuery","Fragment","tooltipOpen","tooltipContent","bind","handleToolTipClose","handleRowClick","translatedlemma","overLemma","placement","CircularProgress","animationDuration","thickness","row","i","onMouseLeave","onMouseEnter","subject","wrs","pos","LiLaKnowledge","linkedLemma","AlertDialog","maxWidth","documentURI","fontStyle","axios","require","chartOptions","legend","position","labels","fontColor","maintainAspectRatio","MainView","rifr","showSidebar","mainWinGridSize","sideWinGridSize","hideSidebar","chartRedraw","refreshClick","tokenArray","textResults","statsChartData","lemmaSheets","document","getElementById","classList","remove","add","processClick","post","apiLiLaTestLinkerSiteUrlPrefix","text","textValue","headers","then","response","sentences","values","stats","sc","datasets","console","log","generateTTL","ttlFormData","FileSaver","TextToBeSend","sentence","tokenarray","x","textToProcess","formData","responseType","blob","Blob","saveAs","loadToTripleStore","AlertDialogOpen","docURI","alert","refreshChart","querySelectorAll","clickOnToken","tokenObject","refreshLemmaToken","setRifr","element","key","classes","borderWidth","ttlDialogOpen","particlesJS","load","addEventListener","top","right","src","alt","background","overflow","marginRight","Grid","container","spacing","xs","sm","md","Paper","elevation","contentEditable","placeholder","flexDirection","redraw","options","submittedForm","rooter","cssLabel","cssFocused","notchedOutline","App","uuidv4","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.85e1b74e.chunk.js","sourcesContent":["import React, {Component} from 'react';\n// import Tooltip from '@material-ui/core/Tooltip';\nimport './Token.css'\n// import withStyles from \"@material-ui/core/styles/withStyles\";\n\n// const MyTooltip = withStyles((theme) => ({\n//     tooltip: {\n//         backgroundColor: '#303030',\n//         fontSize : '11px'\n//     },\n// }))(Tooltip);\n\n\nclass Token extends Component {\n    constructor(props) {\n        super(props);\n\n        let linkingElements = this.props.data.linking\n        if (this.props.data.upos === \"PUNCT\" && this.props.data.upos === \"SYM\" && this.props.data.upos === \"NUM\" && this.props.data.upos === \"X\") {\n            linkingElements = []\n        }\n\n        this.state = {\n            token : this.props.data.token,\n            lemma : this.props.data.lemma,\n            upos : this.props.data.upos,\n            linking : linkingElements,\n            spaceAfter : this.props.data.spaceAfter\n        }\n    }\n\n\n\n    handleTokenClick = ()=>{\n        this.props.tokenClick(this)\n    }\n\n    selectAmbiguousLemma = (lemma) =>{\n        let me = this\n        let linked = [lemma]\n        this.setState({linking:linked},()=>{\n            me.props.refresh(this,lemma)\n        })\n\n    }\n\n\n\n    unlinkLemma = () =>{\n        let me = this\n        let linked = []\n        this.setState({linking:linked},()=>{\n            me.props.refresh(this)\n        })\n    }\n\n    getTokenData = () =>{\n        return this.state\n    }\n\n\n    render() {\n        let linkingClass = ''\n        if (this.state.upos !== \"PUNCT\" && this.state.upos !== \"SYM\" && this.state.upos !== \"NUM\" && this.state.upos !== \"X\") {\n            if (this.state.linking.length === 0) {\n                linkingClass = \"missing\"\n            } else if (this.state.linking.length === 1) {\n                linkingClass = \"direct\"\n            } else if (this.state.linking.length > 1) {\n                linkingClass = \"ambiguous\"\n            }\n        }else{\n            if (this.state.linking.length > 0){\n                if (this.state.linking.length === 1) {\n                    linkingClass = \"direct\"\n                } else if (this.state.linking.length > 1) {\n                    linkingClass = \"ambiguous\"\n                }\n            }\n        }\n\n        return (\n\n            // <MyTooltip title={\"Lemma: \" + this.props.data.lemma + \" - Pos: \"+ this.props.data.upos } >\n            <span title={\"Lemma: \" + this.state.lemma + \" - Pos: \" + this.state.upos} className={'token ' + linkingClass} spaceAfter={this.state.spaceAfter} onClick={(e)=>{this.handleTokenClick(e)}}>{this.state.token}</span>\n            // </MyTooltip>\n        );\n    }\n}\n\n\nexport default Token;","import React, {Component} from 'react';\nimport './Sentence.css'\nclass Sentence extends Component {\n    // constructor(props) {\n    //     super(props);\n    //\n    // }\n\n    render() {\n        return (\n\n            <div className={'sentence'}>{this.props.tokens}</div>\n        );\n    }\n}\n\n\nexport default Sentence;","import Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {Button, Tooltip} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport function Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://lila-erc.eu\">\n                LiLa ERC\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {''}\n        </Typography>\n    );\n}\n\n\nexport const MyButton = withStyles((theme) => ({\n    root: {\n        color: \"#fff\",\n        borderColor: \"#fff\",\n        '&:hover': {\n            backgroundColor: \"rgba(77, 77, 77, 0.56)\",\n        },\n    },\n}))(Button);\n\nexport const MyTextField = withStyles((theme) => ({\n    root: {\n        '& label': {\n            fontFamily: 'monospace',\n            color: \"rgba(255, 69, 0, 0.83)\"\n        },\n        '& .MuiInputBase-root': {\n            fontFamily: 'monospace',\n\n        },\n    },\n\n}))(TextField);\n\nexport const MyTooltip = withStyles((theme) => ({\n    tooltip: {\n        backgroundColor: \"rgba(25, 25, 25, 0.9)\",\n    },\n\n}))(Tooltip);","import React, {Component} from 'react';\nimport {createMuiTheme} from \"@material-ui/core/styles\";\nimport {dark} from \"./TTLFormDialog\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport {DialogContentText, ThemeProvider} from \"@material-ui/core\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nclass ConfirmDialog extends Component {\n\n\n    sendResponse = (val) =>{\n        this.props.confirmResult(val)\n    }\n\n\n    render() {\n        return (\n            <ThemeProvider theme={createMuiTheme(dark)}>\n                <div>\n                    <Dialog\n                        open={this.props.open}\n                        TransitionComponent={Transition}\n                        onClose={() =>{this.sendResponse(false)}}\n                        keepMounted\n                        aria-labelledby=\"alert-dialog-slide-title\"\n                        aria-describedby=\"alert-dialog-slide-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-slide-title\" >Warning</DialogTitle>\n                        <DialogContent style={{paddingTop: \"0px\"}}>\n                            <DialogContentText>\n                            <p>Do you wish to continue?</p>\n                            <p>If you proceed, you'll no longer be able to make changes to your document.</p>\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button   color=\"secondary\" onClick={(e)=>{this.sendResponse(true)}}>\n                           Yes\n                        </Button>\n                        <Button   color=\"secondary\" onClick={(e)=>{this.sendResponse(false)}} autoFocus>\n                            No\n                        </Button>\n                        </DialogActions>\n                    </Dialog></div>\n            </ThemeProvider>\n        );\n    }\n}\n\n\nexport default ConfirmDialog;","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport {ThemeProvider} from '@material-ui/core'\nimport {createMuiTheme} from '@material-ui/core/styles'\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ConfirmDialog from \"./ConfirmDialog\";\n// import FormLabel from \"@material-ui/core/FormLabel\";\n// import RadioGroup from \"@material-ui/core/RadioGroup\";\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\n// import Radio from \"@material-ui/core/Radio\";\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const dark = {\n    palette: {\n        type: 'dark',\n    },\n}\n\n\nclass TTLFormDialog extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            sentenceDivision: \"sentenceYes\",\n            documentTitle: \"\",\n            documentDescription: \"\",\n            documentNamespace: \"\",\n            documentAuthor :\"\",\n            documentPublisher:\"\",\n            docTitleInError: false,\n            docPubInError: false,\n            sessionId : window.theTimeStamp,\n            docTitleHelperText: \"Write the title of the document\",\n            docPubHelperText: \"Write the publisher of the LOD document\",\n            confirmDialogShow :false\n        }\n    }\n\n\n    handleClose = () => {\n        this.props.handleClose(true)\n    };\n\n\n    handleSubmit = (e) => {\n        if (e.includes(\"TTL\")) {\n            this.props.handleClose(true)\n            this.props.submitTTLForm(\n                {\n                    documentTitle: this.state.documentTitle,\n                    documentAuthor: this.state.documentAuthor,\n                    documentPublisher: this.state.documentPublisher,\n                    documentNamespace: this.state.documentNamespace,\n                    sentenceDivision: this.state.sentenceDivision,\n                    documentDescription: this.state.documentDescription,\n                    sessionId : window.theTimeStamp,\n                })\n        }else{\n\n            this.setState({confirmDialogShow:true})\n\n\n        }\n    };\n\n    confirmDialogResponse = (val) =>{\n\n        if (val) {\n            this.props.submitToTriplesore(\n                {\n                    documentTitle: this.state.documentTitle,\n                    documentAuthor: this.state.documentAuthor,\n                    documentPublisher: this.state.documentPublisher,\n                    documentNamespace: this.state.documentNamespace,\n                    sentenceDivision: this.state.sentenceDivision,\n                    documentDescription: this.state.documentDescription,\n                    sessionId: window.theTimeStamp,\n                })\n        }else{\n            this.setState({confirmDialogShow:false})\n        }\n\n    }\n\n\n    validateForm = (e) => {\n\n        if (this.state.documentTitle.trim().length === 0) {\n            this.setState({docTitleInError: true, docTitleHelperText: \"This field is required\"})\n            return;\n        }\n\n        if (this.state.documentPublisher.trim().length === 0) {\n            this.setState({docPubInError: true, docPubHelperText: \"This field is required\"})\n            return;\n        }\n        this.handleSubmit(e.target.textContent)\n\n    }\n\n\n    render() {\n\n        return (\n            <ThemeProvider theme={createMuiTheme(dark)}>\n                <div>\n                    <Dialog\n                        open={this.props.open}\n                        TransitionComponent={Transition}\n                        keepMounted\n                        onClose={this.handleClose}\n                        aria-labelledby=\"alert-dialog-slide-title\"\n                        aria-describedby=\"alert-dialog-slide-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-slide-title\">{\"Before we generate the TTL...\"}</DialogTitle>\n                        {/*<form noValidate autoComplete=\"off\" action={\"\"} onSubmit={(e) => {*/}\n                        {/*    e.preventDefault();*/}\n                        {/*    this.validateForm();*/}\n                        {/*}}>*/}\n                            <DialogContent style={{paddingTop: \"0px\"}}>\n                                <FormControl component=\"fieldset\" style={{width:\"70%\"}}>\n                                    <TextField required error={this.state.docTitleInError} id=\"document-title\" name=\"doc_title\" fullWidth value={this.state.documentTitle} onChange={event => {\n                                        this.setState({documentTitle: event.target.value})\n                                    }} label=\"Document Title\" defaultValue=\"\" margin=\"dense\" color=\"secondary\" helperText={this.state.docTitleHelperText}/>\n                                </FormControl>\n                                <FormControl component=\"fieldset\" style={{width:\"70%\"}}>\n                                    <TextField id=\"document-author\" name=\"doc_author\" fullWidth value={this.state.documentAuthor} onChange={event => {\n                                        this.setState({documentAuthor: event.target.value})\n                                    }} label=\"Document Author\" defaultValue=\"\" margin=\"dense\" color=\"secondary\" helperText='Write the name of the author eg. \"Marcus Tullius Cicero\" or a LOD reference \"http://www.wikidata.org/entity/Q1541\" ' />\n                                </FormControl>\n                                <FormControl component=\"fieldset\" style={{width:\"100%\"}}>\n                                    <TextField id=\"document-description\" multiline rows={3} fullWidth name=\"doc_description\" value={this.state.documentDescription} onChange={event => {\n                                        this.setState({documentDescription: event.target.value})\n                                    }} label=\"Document Description\" defaultValue=\"\" margin=\"dense\" color=\"secondary\" helperText=\"Write a description for your document\"/>\n                                </FormControl>\n                                <FormControl component=\"fieldset\" style={{width:\"70%\"}}>\n                                    <TextField required error={this.state.docPubInError} id=\"document-publisher\" name=\"doc_publisher\" fullWidth value={this.state.documentPublisher} onChange={event => {\n                                        this.setState({documentPublisher: event.target.value})\n                                    }} label=\"Your name/Organisation\" defaultValue=\"\" margin=\"dense\" color=\"secondary\" helperText={this.state.docPubHelperText} />\n                                </FormControl>\n\n                                {/*<FormControl component=\"fieldset\" style={{width:\"100%\"}}>*/}\n                                {/*    <TextField id=\"document-namespace\" name=\"doc_namespace\" fullWidth value={this.state.documentNamespace} onChange={event => {*/}\n                                {/*        this.setState({documentNamespace: event.target.value})*/}\n                                {/*    }} label=\"Namespace\" defaultValue=\"\" margin=\"dense\" color=\"secondary\" helperText=\"Write the namespace for your data or leave this field blank to use the default value\"/>*/}\n                                {/*</FormControl>*/}\n                                {/*<FormControl component=\"fieldset\" style={{marginTop: \"20px\"}} margin=\"dense\">*/}\n                                {/*    <FormLabel component=\"legend\">Would you like to use the automatic sentence division produced by our text linker ?</FormLabel>*/}\n                                {/*    <RadioGroup aria-label=\"sentenceDivision\" name=\"sentenceDivision\" value={this.state.sentenceDivision} onChange={(e) => {*/}\n                                {/*        this.setState({sentenceDivision: e.target.value})*/}\n                                {/*    }}>*/}\n                                {/*        <FormControlLabel value=\"sentenceYes\" control={<Radio/>} label=\"Yes\"/>*/}\n                                {/*        <FormControlLabel value=\"sentenceNo\" control={<Radio/>} label=\"No\"/>*/}\n                                {/*    </RadioGroup>*/}\n                                {/*</FormControl>*/}\n                            </DialogContent>\n                            <DialogActions>\n\n                                {/*decomment to enable upload to triplestore*/}\n                                {/*<Button  name=\"toTripleStore\" color=\"secondary\" onClick={(e)=>{this.validateForm(e)}}>*/}\n                                {/*    Send to triplestore*/}\n                                {/*</Button>*/}\n\n\n                                <Button  name=\"generateTTL\" color=\"secondary\" onClick={(e)=>{this.validateForm(e)}}>\n                                    Generate TTL\n                                </Button>\n                            </DialogActions>\n                        {/*</form>*/}\n                    </Dialog>\n                </div>\n                <ConfirmDialog open={this.state.confirmDialogShow} confirmResult={(result)=>{this.confirmDialogResponse(result)}} />\n            </ThemeProvider>\n        )\n    }\n}\n\nexport default TTLFormDialog;\n","import $ from \"jquery\";\nimport * as Papa from 'papaparse';\n\n\n// url: 'http://lila-erc.eu:8080/LiLaSparqlAccessPoint/lila_knowledge_base/query?format=csv&query=' + encodeURIComponent(query),\n// url: 'https://lila-erc.eu/sparql/'+endpoint+'/query?format=csv&query=' + encodeURIComponent(query),\n\nexport function executeSparql(query,endpoint, callback) {\n    $.ajax({\n        url: 'https://lila-erc.eu/sparql/lila_knowledge_base/query?format=csv&query=' + encodeURIComponent(query),\n        async: true,\n        dataType: \"text\",\n        success: function (data) {\n            let results = Papa.parse(data, {header: true, skipEmptyLines: true});\n\n\n\n            //console.log(results.data);\n            //\n            // data.results.bindings.forEach((elem) =>{\n            //\n            //     let result = {}\n            //     fields.forEach((field) => {\n            //         if (elem.hasOwnProperty(field)){\n            //             result[field] = elem[field].value\n            //         }\n            //     })\n            //     results.push(result)\n            // })\n            callback(results.data)\n            //callback(results)\n        }\n\n    });\n}\n","import {executeSparql} from \"./Sparql\";\n\nexport const listOfPrefix = [\n    {prefix: \"lilaLemma:\" ,uri:\"http://lila-erc.eu/data/id/lemma/\"},\n    {prefix: \"lilaIpoLemma:\" ,uri:\"http://lila-erc.eu/data/id/hypolemma/\"},\n    {prefix: \"lila:\" ,uri:\"http://lila-erc.eu/ontologies/lila/\"},\n    {prefix: \"ontolex:\" ,uri:\"http://www.w3.org/ns/lemon/ontolex#\"},\n    {prefix: \"rdf:\" ,uri:\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"},\n    {prefix: \"rdfs:\" ,uri:\"http://www.w3.org/2000/01/rdf-schema#\"},\n    {prefix: \"dcterms:\" ,uri:\"http://purl.org/dc/terms/\"},\n]\n\nexport function translatePrefix(String){\n    let out = String\n    listOfPrefix.forEach(object => {\n        if (String.startsWith(object.prefix)){\n            out = String.replace(object.prefix,object.uri)\n\n        }else if(String.startsWith(object.uri)){\n            out = String.replace(object.uri,object.prefix)\n        }\n    })\n    return out\n}\n\nexport function getLabel (uri,endpoint, callback){\n\n        let query = \"Prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n            \"SELECT *\\n\" +\n            \"WHERE {\\n\" +\n            \"  <\" + uri + \"> rdfs:label ?object\\n\" +\n            \"}\"\n        executeSparql(query, endpoint ,(data) => {\n            let res = uri\n            if(data.length>0){\n              //  console.log(data[0].object);\n                res = data[0].object\n            }\n            callback(res)\n\n        })\n\n}\n\nexport function getLatinAffectusPolarity(lexicalEntry){\n    return \"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n\" +\n        \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n        \"PREFIX ontolex: <http://www.w3.org/ns/lemon/ontolex#>\\n\" +\n        \"PREFIX marl: <http://www.gsi.dit.upm.es/ontologies/marl/ns#>\\n\" +\n        \"\\n\" +\n        \"SELECT ?polarityValue ?polarity WHERE {\\n\" +\n        \"\\t<\"+lexicalEntry+\"> ontolex:sense ?sense .\\n\" +\n        \"  \\t?sense marl:polarityValue ?polarityValue;\\n\" +\n        \"          marl:hasPolarity ?polarityObj.\\n\" +\n        \"  \\t?polarityObj rdfs:label ?polarity\\n\" +\n        \"} \"\n}\n\n\nexport function getEtymonQuery(lexicalEntry){\n    return \"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n\" +\n        \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n        \"PREFIX lime: <http://www.w3.org/ns/lemon/lime#>\\n\" +\n        \"PREFIX lemonEty: <http://lari-datasets.ilc.cnr.it/lemonEty#>\\n\" +\n        \"PREFIX ontolex: <http://www.w3.org/ns/lemon/ontolex#>\\n\" +\n        \"PREFIX lilaLemma: <http://lila-erc.eu/data/id/lemma/>\\n\" +\n        \"PREFIX lilaIpoLemma: <http://lila-erc.eu/data/id/hypolemma/>\\n\" +\n        \"\\n\" +\n        \"SELECT  ?etymon ?etymonLanguage ?cognateLemma WHERE {\\n\" +\n        \"  \\tBIND(<\"+lexicalEntry+\"> AS ?le)\\n\" +\n        \"\\t{?le lemonEty:etymology ?etymology .\\n\" +\n        \"  \\t?etymology lemonEty:etymon ?ety.\\n\" +\n        \"  \\t?ety lime:language ?etymonLanguage;\\n\" +\n        \"        rdfs:label ?etymon.}\\n\" +\n        \"  \\tUNION{\\n\" +\n        \"      ?le lemonEty:cognate ?cognate .\\n\" +\n        \"      ?cognate lemonEty:etymology ?etymologyCog .\\n\" +\n        \"\\t  ?cognate ontolex:canonicalForm ?cognateLemma .   \\n\" +\n        \"      ?etymologyCog lemonEty:etymon ?etyCog .\\n\" +\n        \"      ?etyCog lime:language ?etymonLanguage;\\n\" +\n        \"                 rdfs:label ?etymon.\\n\" +\n        \"  \\t}\\n\" +\n        \"} \"\n}\n\nexport function getIGVLLQuery(lexicalEntry){\n    return \"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n\" +\n        \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n        \"PREFIX ontolex: <http://www.w3.org/ns/lemon/ontolex#>\\n\" +\n        \"PREFIX lemonEty: <http://lari-datasets.ilc.cnr.it/lemonEty#>\\n\" +\n        \"PREFIX crminf: <http://new.cidoc-crm.org/crminf/>\\n\" +\n        \"SELECT ?etymology ?belief ?etymo ?cognate (GROUP_CONCAT(DISTINCT ?subtermsLabel ; separator=\\\" \\\") as ?subterms)  WHERE {\\n\" +\n        \"\\t<\"+lexicalEntry+\"> lemonEty:etymology ?etymology .\\n\" +\n        \"  \\t?etymology lemonEty:etymon ?etymon .\\n\" +\n        \"  OPTIONAL {\\n\" +\n        \"  \\t?beliefcrm crminf:J4 ?etymology;\\n\" +\n        \"           rdfs:label ?belief.\\n\" +\n        \"  }\\n\" +\n        \"  \\t?etymon rdfs:label ?etymo.\\n\" +\n        \"  OPTIONAL {\\n\" +\n        \"    ?etymon lemonEty:cognate ?cogn.\\n\" +\n        \"    ?cogn rdfs:label ?cognate\\n\" +\n        \"  }\\n\" +\n        \"  OPTIONAL{\\n\" +\n        \"  \\t?etymon <decomp:subterm> ?subs.\\n\" +\n        \"    ?subs rdfs:label ?subtermsLabel\\n\" +\n        \"  }\\n\" +\n        \"  \\n\" +\n        \"}group by ?etymology ?belief ?etymo ?cognate\\n\" +\n        \"\\n\" +\n        \"\\n\"\n}\n\n\nexport function getLexiconsQuery (lemma) {\n    return \"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n\" +\n        \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n        \"PREFIX lime: <http://www.w3.org/ns/lemon/lime#>\\n\" +\n        \"PREFIX lilaLemma: <http://lila-erc.eu/data/id/lemma/>\\n\" +\n        \"PREFIX lilaIpoLemma: <http://lila-erc.eu/data/id/hypolemma/>\\n\" +\n        \"\\n\" +\n        \"SELECT * WHERE {\\n\" +\n        \"  ?lexicalEntry ?pred \"+lemma+\" .\\n\" +\n        \"  ?lexicon lime:entry ?lexicalEntry    \\n\" +\n        \"} \"\n}\n\n\nexport function getLatinWordnetQuery (lexicalEntry){\n    return \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n        \"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n\" +\n        \"prefix ontolex: <http://www.w3.org/ns/lemon/ontolex#>\\n\" +\n        \"prefix skos: <http://www.w3.org/2004/02/skos/core#>\\n\" +\n        \"prefix wn: <http://wordnet-rdf.princeton.edu/ontology#>\\n\" +\n        \"\\n\" +\n        \"SELECT *\\n\" +\n        \"{\\n\" +\n        \"\\t<\"+lexicalEntry+\"> ontolex:sense ?sense.\\n\" +\n        \"  \\t?sense ontolex:isLexicalizedSenseOf ?synLink.\\n\" +\n        \"    ?synLink skos:definition ?def.\\n\" +\n        \"  \\tOPTIONAL {\\n\" +\n        \"      ?pT rdfs:subPropertyOf wn:link .\\n\" +\n        \"      ?pT rdfs:label ?pTLabel.\\n\" +\n        \"      ?synLink ?pT ?relSyn.\\n\" +\n        \"      ?relSyn skos:definition ?defRel.\\n\" +\n        \"  \\t}\\n\" +\n        \"}\"\n}\n\n\nexport function getLemmaStartingWith (string) {\n\n    return \"PREFIX lilaLemma: <http://lila-erc.eu/data/id/lemma/>\\n\" +\n        \"PREFIX lilaIpoLemma: <http://lila-erc.eu/data/id/hypolemma/>\\n\" +\n        \"PREFIX ontolex: <http://www.w3.org/ns/lemon/ontolex#>\\n\" +\n        \"PREFIX lila: <http://lila-erc.eu/ontologies/lila/>\\n\" +\n        \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n        \"\\n\" +\n        \"SELECT ?subject ?poslink ?pos (group_concat(distinct ?wr;\\n\" +\n        \"    separator=\\\" \\\") as ?wrs) WHERE { \\n\" +\n        \"  ?subject ontolex:writtenRep ?object ;\\n\" +\n        \"           lila:hasPOS ?poslink . \\n\" +\n        \"  ?poslink rdfs:label ?pos .\\n\" +\n        \"  ?subject ontolex:writtenRep ?wr .\\n\" +\n        \"  FILTER regex(?object, \\\"^\"+string+\"\\\",\\\"i\\\")\\n\" +\n        \"} \\n\" +\n        \"GROUP BY  ?subject ?poslink ?pos\\n\" +\n        \"ORDER BY ?wrs \"\n}\n\n\n\nexport function getLemmaBankQuery (lemma) {\n\n    return \"Prefix lilaLemma: <http://lila-erc.eu/data/id/lemma/>\\n\" +\n    \"Prefix lilaIpoLemma: <http://lila-erc.eu/data/id/hypolemma/>\\n\" +\n    \"Prefix lila: <http://lila-erc.eu/ontologies/lila/>\\n\" +\n    \"Prefix ontolex: <http://www.w3.org/ns/lemon/ontolex#>\\n\" +\n    \"Prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n\" +\n    \"Prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n    \"SELECT *\\n\" +\n    \"WHERE {\\n\" +\n    \"  \"+lemma+\" ?predicate ?object\\n\" +\n    \"}\"\n}\n\n\nexport function getLewisShortQuery (subject){\n    return \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n\" +\n        \"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\n\" +\n        \"PREFIX lime: <http://www.w3.org/ns/lemon/lime#>\\n\" +\n        \"prefix ontolex: <http://www.w3.org/ns/lemon/ontolex#>\\n\" +\n        \"prefix skos: <http://www.w3.org/2004/02/skos#>\\n\" +\n        \"prefix wn: <http://wordnet-rdf.princeton.edu/ontology#>\\n\" +\n        \"prefix premon: <http://premon.fbk.eu/ontology/core#>\\n\" +\n        \"prefix lv: <http://lila-erc.eu/ontologies/latinVallex/>\\n\" +\n        \"\\n\" +\n        \"SELECT *\\n\" +\n        \"{\\n\" +\n        \" VALUES ?le { <\"+subject+\">} \\n\" +\n        \"    \\n\" +\n        \" ?le rdfs:label ?leLabel .\\n\" +\n        \"  \\n\" +\n        \" \\t\\t?le    ontolex:sense ?defs.\\n\" +\n        \"  \\t\\t?defs skos:definition ?defsString  .\\n\" +\n        \"}order by ?defs\"\n}\n","import React, {Component} from 'react';\nimport {getLabel, translatePrefix} from \"./SparqlQueriesTemplate\";\n\nclass RDFListItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            object: []\n        }\n    }\n\n    componentDidMount() {\n        let me = this\n\n        //console.log(this.props.object);\n\n        this.props.object.forEach(item =>{\n            getLabel(item,'lemmaBank', (label) => {\n                let lbs = me.state.object\n                lbs.push(label)\n                me.setState({object: lbs})\n            })\n        })\n\n\n\n    }\n    render() {\n        return (\n            <li>{translatePrefix(this.props.predicate)}&nbsp;<span className={\"sheet-line-value\"}>{this.state.object.join(\" \")}</span></li>\n        )\n    }\n\n}\n\n\nexport default RDFListItem;","import React, {Component} from 'react';\nimport {getEtymonQuery, getLabel, translatePrefix} from \"../../utils/SparqlQueriesTemplate\";\nimport './LexicalResources.css'\nimport {executeSparql} from \"../../utils/Sparql\";\n\nclass LiLaBrillLexicon extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lexiconName: '',\n            etymons: [],\n            cognate: \"\"\n        }\n    }\n\n    componentDidMount() {\n        let me = this\n        getLabel(this.props.data.lexicon, 'lexicalResources', (label) => {\n            me.setState({lexiconName: label})\n        })\n        let etymonQuery = getEtymonQuery(this.props.data.lexicalEntry)\n        executeSparql(etymonQuery, \"lexicalResources\", (etymons) => {\n            let etyms = []\n            etymons.forEach(etym => {\n                this.setState({cognate: etym.cognateLemma})\n                etyms.push({language: etym.etymonLanguage, etymon: etym.etymon})\n            })\n            me.setState({etymons: etyms})\n        })\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"lexical-resource-title\"}>{this.state.lexiconName}</div>\n                {this.state.cognate.length > 0 ? <div style={{marginLeft: \"5px\", marginTop: \"10px\"}}>Cognate of <a href={this.state.cognate} rel=\"noreferrer\" target={'_blank'}>{translatePrefix(this.state.cognate)}</a></div> : \"\"}\n                <ul>\n                    {this.state.etymons.map(ety => {\n                        return <li>{\"Language \" + ety.language + \": \" + ety.etymon}</li>\n                    })}\n                </ul>\n            </div>\n        );\n    }\n}\n\n\nexport default LiLaBrillLexicon;","import React, {Component} from 'react';\nimport { getLabel, getLatinAffectusPolarity} from \"../../utils/SparqlQueriesTemplate\";\nimport './LexicalResources.css'\nimport {executeSparql} from \"../../utils/Sparql\";\n\n\nclass LiLaLatinAffectusLexicon extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lexiconName: '',\n            polarity : []\n        }\n    }\n\n    componentDidMount() {\n        let me = this\n        getLabel(this.props.data.lexicon,'lexicalResources', (label) => {\n            me.setState({lexiconName:label})\n        })\n        let affectusQuery = getLatinAffectusPolarity(this.props.data.lexicalEntry)\n\n\n\n        executeSparql(affectusQuery, \"lexicalResources\", (polarities) => {\n            let polars = []\n            polarities.forEach(polarityItem =>{\n                polars.push({polarityValue : parseFloat(polarityItem.polarityValue),polarity : polarityItem.polarity})\n            })\n            me.setState({polarity:polars})\n        })\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"lexical-resource-title\"}>{this.state.lexiconName}</div>\n\n\n                    {this.state.polarity.map(polar => {\n                        return <ul><li>{\"Polarity \"+polar.polarity }</li><li>{\"Polarity Value \"+polar.polarityValue }</li></ul>\n                    })}\n\n            </div>\n        );\n    }\n}\n\n\n\nexport default LiLaLatinAffectusLexicon;","import React, {Component} from 'react';\nimport {getIGVLLQuery, getLabel} from \"../../utils/SparqlQueriesTemplate\";\nimport {executeSparql} from \"../../utils/Sparql\";\n\nclass LiLaIGVLLLexicon extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lexiconName: '',\n            entries: []\n        }\n    }\n\n    componentDidMount() {\n        let me = this\n        getLabel(this.props.data.lexicon, 'lexicalResources', (label) => {\n            me.setState({lexiconName: label})\n        })\n        let IGVLLQuery = getIGVLLQuery(this.props.data.lexicalEntry)\n        executeSparql(IGVLLQuery, \"lexicalResources\", (entries) => {\n            let etrs = []\n            entries.forEach(entry => {\n                etrs.push({etymon: entry.etymo, belief: entry.belief, cognate: entry.cognate, subterms: entry.subterms})\n            })\n            me.setState({entries: etrs})\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"lexical-resource-title\"}>{this.state.lexiconName}</div>\n                {this.state.entries.map(entry => {\n                    return <ul>\n                        {entry.belief.length > 0 ? <li>{entry.belief}</li> :\"\"}\n                        <li>{\"etymon \"+entry.etymon}</li>\n                        {entry.cognate.length > 0 ? <li>{\"cognate \" + entry.cognate}</li> :\"\"}\n                        {entry.subterms.length > 0 ? <li>{\"subterms \" + entry.subterms}</li> :\"\"}\n                    </ul>\n                })}\n            </div>\n        );\n    }\n}\n\n\nexport default LiLaIGVLLLexicon;","import React, {Component} from 'react';\nimport { getLabel, getLatinWordnetQuery} from \"../../utils/SparqlQueriesTemplate\";\nimport './LexicalResources.css'\nimport {executeSparql} from \"../../utils/Sparql\";\nimport * as _ from \"underscore\";\n\nclass LiLaLWNLexicon extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lexiconName: '',\n            senses: []\n        }\n    }\n\n    componentDidMount() {\n        let me = this\n        getLabel(this.props.data.lexicon, 'lexicalResources', (label) => {\n            me.setState({lexiconName: label})\n        })\n        //console.log(this.props.data.lexicalEntry);\n        let lwnQuery = getLatinWordnetQuery(this.props.data.lexicalEntry)\n        executeSparql(lwnQuery, \"lexicalResources\", (WNsenses) => {\n            let senses = []\n            WNsenses.forEach(sensesItem => {\n\n                let collectedSenses = _.findWhere(senses,{id: sensesItem.sense});\n                let sense = {id : sensesItem.sense, definition : sensesItem.def , princetonLink: sensesItem.synLink , relations: []}\n                if (collectedSenses != undefined) {\n                    sense = collectedSenses\n                }else{\n                    senses.push(sense);\n                }\n                sense.relations.push({ relType: sensesItem.pTLabel, princetonLink: sensesItem.relSyn , definition:sensesItem.defRel})\n\n            })\n            // console.log(senses);\n            // let polars = []\n            // polarities.forEach(polarityItem =>{\n            //     polars.push({polarityValue : parseInt(polarityItem.polarityValue),polarity : polarityItem.polarity})\n            // })\n            me.setState({senses:senses})\n        })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"lexical-resource-title\"}>{this.state.lexiconName}</div>\n                <p style={{marginLeft:\"10px\"}}>Senses:</p>\n                <ol>\n                {this.state.senses.map(sense => {\n                    return <li><a href={sense.princetonLink} target={\"_blank\"}>{sense.definition}</a><ul>{sense.relations.map(rel =>{\n                        //    return <li>{rel.relType} - <a style={{color:\"orange\"}} href={rel.princetonLink} target={\"_black\"}>{rel.definition}</a> </li>\n                    })}</ul></li>\n                })}\n                </ol>\n            </div>\n        );\n    }\n}\n\n\nexport default LiLaLWNLexicon;","import React, {Component} from 'react';\nimport { getLabel, getLewisShortQuery} from \"../../utils/SparqlQueriesTemplate\";\nimport './LexicalResources.css'\nimport {executeSparql} from \"../../utils/Sparql\";\n\n\nclass LiLaLewisShortLexicon extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lexiconName: '',\n            definitions : []\n        }\n    }\n\n    componentDidMount() {\n        let me = this\n        getLabel(this.props.data.lexicon,'lexicalResources', (label) => {\n            me.setState({lexiconName:label})\n        })\n        let lewisShortQuery = getLewisShortQuery(this.props.data.lexicalEntry)\n\n\n        executeSparql(lewisShortQuery, \"lexicalResources\", (definitions) => {\n            let defs = []\n            definitions.forEach(definitionItem =>{\n                defs.push(definitionItem.defsString)\n            })\n\n            me.setState({definitions:defs})\n        })\n\n\n    }\n\n    render() {\n        return (\n            this.state.definitions.length > 0 ?\n            <div>\n                <div className={\"lexical-resource-title\"}>{this.state.lexiconName}</div>\n\n                <ul style={{listStyle:\"disc\"}}>\n                    {this.state.definitions.map(polar => {\n                        return <li style={{marginLeft:\"-5px\"}}>{polar}</li>\n                    })}\n                </ul>\n            </div>\n                :\"\"\n        );\n    }\n}\n\n\n\nexport default LiLaLewisShortLexicon;\n","import React, {Component} from 'react';\nimport {getLexiconsQuery} from \"../utils/SparqlQueriesTemplate\";\nimport {executeSparql} from \"../utils/Sparql\";\nimport LiLaBrillLexicon from \"./LexicalResources/LiLaBrillLexicon\";\nimport LiLaLatinAffectusLexicon from \"./LexicalResources/LiLaLatinAffectusLexicon\";\nimport LiLaIGVLLLexicon from \"./LexicalResources/LiLaIGVLLLexicon\";\nimport LiLaLWNLexicon from \"./LexicalResources/LiLaLWNLexicon\";\nimport LiLaLewisShortLexicon from \"./LexicalResources/LiLaLewisShortLexicon\";\n\nclass LiLaLexicalResources extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            resources: []\n        }\n    }\n\n    componentDidMount() {\n        let lexcalRes = getLexiconsQuery(this.props.lemma)\n\n        executeSparql(lexcalRes, \"lexicalResources\", (lexicalEntries) => {\n            if (lexicalEntries.length > 0) {\n                let res = this.state.resources\n                lexicalEntries.forEach(le => {\n                    if (le.lexicon === \"http://lila-erc.eu/data/lexicalResources/LewisShort/Lexicon\"){\n                        res.push(<LiLaLewisShortLexicon data={le}/>)\n                    }\n                    if (le.lexicon === \"http://lila-erc.eu/data/lexicalResources/BrillEDL/Lexicon\"){\n                        res.push(<LiLaBrillLexicon data={le}/>)\n                    }\n                    if (le.lexicon === \"http://lila-erc.eu/data/lexicalResources/LatinAffectus/Lexicon\"){\n                        res.push(<LiLaLatinAffectusLexicon data={le}/>)\n                    }\n                    if (le.lexicon === \"http://lila-erc.eu/data/lexicalResources/IGVLL/Lexicon\"){\n                        res.push(<LiLaIGVLLLexicon data={le}/>)\n                    }\n                    if (le.lexicon === \"http://lila-erc.eu/data/lexicalResources/LatinWordNet/Lexicon\"){\n                        res.push(<LiLaLWNLexicon data={le}/>)\n                    }\n\n                })\n                this.setState({resources: res})\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.resources.length > 0 ? <div><p style={{fontSize:\"14px\",fontWeight:\"bolder\",marginLeft:\"5px\"}}>Lexical resources:</p> {this.state.resources} </div> : \"\"}\n            </div>\n        );\n    }\n}\n\n\nexport default LiLaLexicalResources;\n","import React, {Component} from 'react';\nimport {getLemmaBankQuery, translatePrefix} from \"../utils/SparqlQueriesTemplate\";\nimport {executeSparql} from \"../utils/Sparql\";\nimport RDFListItem from \"../utils/RDFListItem\";\nimport LiLaLexicalResources from \"./LiLaLexicalResources\";\nimport {MyButton} from \"../utils/Utils\";\nimport {LinkOff} from \"@material-ui/icons\";\nimport {Tooltip} from \"@material-ui/core\";\n\nclass LiLaLemma extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sheetLemmaContent: \"\"\n        }\n\n    }\n\n    componentDidMount() {\n        let lemma = this.props.link\n        let theQuery = getLemmaBankQuery(lemma)\n        //console.log(theQuery);\n        executeSparql(theQuery, 'lemmaBank', (result) => {\n            let elements = {}\n            result.forEach(item => {\n                if (elements.hasOwnProperty(item.predicate)) {\n                    elements[item.predicate].push(item.object)\n                } else {\n                    elements[item.predicate] = [item.object]\n                }\n            })\n            let elementLines = []\n            Object.keys(elements).forEach(pred => {\n                elementLines.push({predicate: pred, object: elements[pred]})\n            })\n\n            let results = <ul>\n                {elementLines.map(elementLines => {\n                    return <RDFListItem predicate={elementLines.predicate} object={elementLines.object}/>\n                })}\n            </ul>\n            //console.log(result);\n            this.setState({sheetLemmaContent: results})\n        })\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <div style={{padding: '5px'}}>\n\n                    <div style={{display: \"flex\", justifyContent: \"space-between\"}}><p>Lemma: {this.props.selectedToken.props.data.lemma} - UPOS: {this.props.selectedToken.props.data.upos}</p>\n                        <div style={{display:\"flex\",alignItems:\"center\"}}>{this.props.selectedToken.state.linking.length > 1 ? <MyButton size=\"small\" variant=\"outlined\" onClick={(e) => {this.props.selectedToken.selectAmbiguousLemma(this.props.link)}} style={{height: \"28px\", fontSize: \"12px\"}}>Choose</MyButton> : \"\"}\n                            <Tooltip title={\"Unlink lemma\"}><LinkOff style={{cursor:\"pointer\",marginLeft:\"8px\"}} onClick={(e) => {this.props.selectedToken.unlinkLemma()}}/></Tooltip>\n                        </div>\n                    </div>\n                    <p style={{fontSize: \"14px\", fontWeight: \"bolder\"}}>Data from LemmaBank:</p>\n                    Linked to LiLa <a href={translatePrefix(this.props.link)} rel=\"noreferrer\" target={'_blank'}>{this.props.link}</a> <br/>\n                    {this.state.sheetLemmaContent}\n\n                </div>\n                <LiLaLexicalResources lemma={this.props.link}/>\n            </div>\n        );\n    }\n}\n\n\nexport default LiLaLemma;","import React, {Component} from 'react';\nimport './LemmaSheet.css'\nimport LiLaLemma from \"../LiLaObjectsFacets/LiLaLemma\";\n\nclass LemmaSheet extends Component {\n\n    render() {\n        return (\n            <div className={'lemma-sheet'}>\n                <div className={'lemma-sheet-header'}>\n                    Form: {this.props.selectedToken.props.data.token}\n                </div>\n                <div className={'lemma-sheet-content'}>\n                    <LiLaLemma selectedToken={this.props.selectedToken} link={this.props.link}/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default LemmaSheet;","import React, {Component} from 'react';\nimport {MyTextField, MyTooltip} from \"../utils/Utils\";\nimport {getLemmaBankQuery, getLemmaStartingWith, translatePrefix} from \"../utils/SparqlQueriesTemplate\";\nimport {executeSparql} from \"../utils/Sparql\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport \"./LemmaSpotlight.css\"\nimport RDFListItem from \"../utils/RDFListItem\";\n\nclass LemmaSpotlight extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lemmasearch: \"\",\n            runningQuery: \"none\",\n            results: [],\n            tooltipContent: \"\",\n            tooltipOpen: false,\n            overLemma: \"\"\n        }\n    }\n\n\n    getLemmas = (string, callback) => {\n\n        let theQuery = getLemmaStartingWith(string)\n        //console.log(theQuery);\n        executeSparql(theQuery, 'lemmaBank', (result) => {\n            // console.log(result);\n            callback(result)\n        })\n    }\n\n\n    lemmaSearchChange = (e) => {\n        let me = this\n        this.setState({lemmasearch: e.target.value.replace(/v/g,\"u\")}, () => {\n\n            if (me.timeout) clearTimeout(me.timeout);\n            me.timeout = setTimeout(function () {\n                //me.reloadControlData()\n                //  me.getResults()\n                if (me.state.lemmasearch.length > 0) {\n                    me.setState({runningQuery: 'block'}, () => {\n\n                        me.getLemmas(me.state.lemmasearch, (results) => {\n                            me.setState({runningQuery: 'none', results: results})\n\n                        })\n\n                    })\n                }\n            }, 1500)\n        })\n    }\n\n    handleToolTipOpen = (id) => {\n        let me = this\n        if (id.length > 0) {\n            let ttcontent = \"\"\n            let translatedID = id.startsWith(\"http\") ? translatePrefix(id) : id\n            let theQuery = getLemmaBankQuery(translatedID)\n            if (me.timeout) clearTimeout(me.timeout);\n            me.timeout = setTimeout(function () {\n                executeSparql(theQuery, 'lemmaBank', (result) => {\n                    let elements = {}\n                    result.forEach(item => {\n                        if (elements.hasOwnProperty(item.predicate)) {\n                            elements[item.predicate].push(item.object)\n                        } else {\n                            elements[item.predicate] = [item.object]\n                        }\n                    })\n                    let elementLines = []\n                    Object.keys(elements).forEach(pred => {\n                        elementLines.push({predicate: pred, object: elements[pred]})\n                    })\n\n                    let results = <div className={\"lemma-sheet-content\"} style={{backgroundColor: \"transparent\"}}>\n                        <ul style={{fontSize: \"12px\"}}>\n                            {elementLines.map(elementLines => {\n                                return <RDFListItem predicate={elementLines.predicate} object={elementLines.object}/>\n                            })}\n                        </ul>\n                    </div>\n\n                    ttcontent = <React.Fragment> {results} </React.Fragment>\n                    this.setState({tooltipOpen: true, tooltipContent: ttcontent})\n                })\n            }.bind(this), 500)\n        }\n\n\n    }\n\n    handleToolTipClose = () => {\n        let me = this\n        if (me.timeout) clearTimeout(me.timeout);\n        this.setState({tooltipOpen: false, tooltipContent: \"\"})\n    }\n    handleRowClick = (lemma) => {\n        let translatedlemma = lemma.startsWith(\"http\") ? translatePrefix(lemma) : lemma\n        this.props.selectedToken.selectAmbiguousLemma(translatedlemma)\n\n    }\n\n    render() {\n        return (\n            <div className={'lemma-sheet'}>\n                <div className={'lemma-sheet-header'}>\n                    Unmatched Lemma\n                </div>\n                <div className={'lemma-sheet-content'}>\n                    <div style={{margin: \"5px\"}}>\n                        <p>Lemma: {this.props.selectedToken.props.data.lemma} - UPOS: {this.props.selectedToken.props.data.upos}</p>\n                        <MyTextField fullWidth id=\"lemma-search\" name=\"lemma-search\" value={this.state.lemmasearch} onChange={event => this.lemmaSearchChange(event)} label=\"Search Lemma\" defaultValue=\"\" margin=\"dense\" color=\"secondary\"/>\n                        <MyTooltip placement=\"top\" open={this.state.tooltipOpen} title={this.state.tooltipContent}>\n                            <div id={\"results\"}>\n                                <CircularProgress\n                                    style={{\n                                        color: '#686868',\n                                        animationDuration: '1200ms',\n                                        display: this.state.runningQuery\n                                    }}\n                                    size={24}\n                                    thickness={4}\n                                />\n\n                                <div className={\"results-container\"}>\n                                    {this.state.results.map((row, i) => {\n                                        return <div className={\"result-line\"} onMouseLeave={() => this.handleToolTipClose()} onMouseEnter={() => this.handleToolTipOpen(row.subject)} onClick={() => this.handleRowClick(row.subject)}><span style={{color: \"orange\"}}>{row.wrs}</span><span> - {row.pos}</span></div>\n                                    })}\n                                </div>\n\n                            </div>\n                        </MyTooltip>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default LemmaSpotlight;","import React, {Component} from 'react';\nimport LemmaSheet from \"./LemmaSheet\";\nimport LemmaSpotlight from \"./LemmaSpotlight\";\n\nclass LiLaKnowledge extends Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    // componentDidMount() {\n    //     if (this.props.selectedToken !=)\n    //     console.log(this.props.selectedToken);\n    //     console.log(this.props.selectedToken);\n    // }\n\n\n    render() {\n\n        return (\n            <div className={\"sheets-container\"}>\n                {this.props.selectedToken !== undefined ?\n                    this.props.selectedToken.state.linking.length > 0 ?\n                        this.props.selectedToken.state.linking.map(linkedLemma => {\n                    return <LemmaSheet selectedToken={this.props.selectedToken} link={linkedLemma}/>\n                }) : <LemmaSpotlight selectedToken={this.props.selectedToken} /> : \"\"}\n            </div>\n        );\n    }\n}\n\n\nexport default LiLaKnowledge;","import React, {Component} from 'react';\nimport {ThemeProvider} from \"@material-ui/core\";\nimport {createMuiTheme} from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport {dark} from \"./TTLFormDialog\";\nimport Slide from \"@material-ui/core/Slide\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nclass AlertDialog extends Component {\n\n    render() {\n        return (\n            <ThemeProvider theme={createMuiTheme(dark)}>\n                <div>\n                    <Dialog\n                        open={this.props.open}\n                        TransitionComponent={Transition}\n                        keepMounted\n                        fullWidth\n                        maxWidth={\"md\"}\n                        aria-labelledby=\"alert-dialog-slide-title\"\n                        aria-describedby=\"alert-dialog-slide-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-slide-title\" ><span style={{fontSize:\"30px\"}}>{\"Before you go...\"}</span></DialogTitle>\n                        <DialogContent style={{paddingTop: \"0px\"}}>\n                            <p>Please <u>copy and save</u> the document URI below: </p>\n                            <span style={{color:\"#f50057\"}}>{this.props.documentURI}</span>\n                            <p style={{fontStyle:\"oblique\"}}>To use this application again, please reload the page.</p>\n                        </DialogContent>\n                    </Dialog></div>\n            </ThemeProvider>\n        );\n    }\n}\n\n\nexport default AlertDialog;","import React, {Component} from 'react';\nimport {HelpOutline} from '@material-ui/icons'\nimport {Paper, Grid} from \"@material-ui/core\";\nimport './MainView.css'\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Token from \"../components/Token\";\nimport Sentence from \"../components/Sentence\";\nimport {Doughnut} from \"react-chartjs-2\";\n\nimport {MyButton, Copyright} from \"../utils/Utils\";\nimport TTLFormDialog from \"../components/TTLFormDialog\";\nimport LiLaKnowledge from \"../components/LiLaKnowledge\";\nimport AlertDialog from \"../components/AlertDialog\";\n\n// import LazyLoad from 'react-lazyload';\n// eslint-disable-next-line no-unused-vars\nconst particlesJS = require('particles.js')\nconst axios = require('axios')\n\n\nconst styles = theme => ({\n    rooter: {\n        \"& $notchedOutline\": {\n            borderColor: \"#8a8a8a\"\n        },\n        \"&:hover $notchedOutline\": {\n            borderColor: \"#75317E\"\n        },\n        \"&$focused $notchedOutline\": {\n            borderColor: \"#75317E\"\n        },\n    },\n    cssLabel: {\n        '&$cssFocused': {\n            color: '#75317E',\n        },\n        color: '#000',\n        fontSize: \"14px\"\n    },\n\n    cssFocused: {\n        color: '#000',\n        fontSize: \"14px\"\n\n    },\n    notchedOutline: {\n        \"&\": {\n            borderColor: \"#858585\"\n        },\n        \"&:hover\": {\n            borderColor: \"#858585\"\n        },\n        \"&$focused\": {\n            borderColor: \"#858585\"\n        },\n    },\n\n});\n\n\nconst chartOptions = {\n    legend: {\n        display: true,\n        position: 'right',\n        labels: {\n            fontColor: 'rgb(255,255,255)'\n        },\n\n    },\n\n    maintainAspectRatio: false\n}\n\n\nclass MainView extends Component {\n\n    rifr = {}\n\n    constructor(props) {\n        super(props);\n        const {classes} = this.props;\n\n        this.state = {\n            classes: classes,\n            textValue: \"\",\n            textResults: [],\n            statsChartData: {\n                labels: [\"exact match\",\"ambiguous match\",\"no match\"],\n                datasets:[\n                    {\n                        label : 'linking coverage',\n                        data : [ 0, 0, 0],\n                        backgroundColor : [\"rgba(142, 187, 142, 0.5)\", \"rgba(106, 125, 156, 0.5)\", \"rgba(255, 69, 0, 0.5)\"],\n                        borderWidth : 1,\n                    }\n                ],\n\n\n            },\n            lemmaSheets: [],\n            mainWinGridSize: [12, 12],\n            sideWinGridSize: [0, 0],\n            chartRedraw: true,\n            ttlDialogOpen: false,\n            AlertDialogOpen:false,\n            selectedToken : undefined,\n            tokenArray : [],\n            docURI : \"\"\n        }\n\n    }\n\n    showSidebar = () => {\n        this.setState({mainWinGridSize: [7, 8], sideWinGridSize: [5, 4]})\n    }\n\n    hideSidebar = () => {\n        this.setState({mainWinGridSize: [12, 12], sideWinGridSize: [0, 0], chartRedraw: true})\n    }\n\n\n    refreshClick = (e) => {\n\n        this.hideSidebar()\n\n        this.setState({ tokenArray:[], textResults: [], statsChartData: {}, lemmaSheets: []}, () => {\n            document.getElementById('text_field').classList.remove('textFiled-hidden')\n        })\n        document.getElementById('text_field').classList.add('textFiled-hidden')\n    }\n\n\n    processClick = (e) => {\n        let me = this\n        me.setState({mainWinGridSize: [7, 8], sideWinGridSize: [5, 4]}, () => {\n            axios.post(window.apiLiLaTestLinkerSiteUrlPrefix+'processText', {\n                text: me.state.textValue\n            }, {\n                headers: {\n                    'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n                }\n            }).then((response) => {\n\n\n                // console.log(response);\n                me.setState({textResults: response.data.sentences}, () => {\n                    document.getElementById('text_field').classList.add('textFiled-hidden');\n\n                    let values = [0 ,0, 0]\n                    for (const [label, value] of Object.entries(response.data.stats)) {\n\n                        switch (label){\n                            case \"direct\" :\n                                values[0] = value\n                                break;\n                            case \"missing\" :\n                                values[2] = value\n                                break;\n                            case \"ambiguous\" :\n                                values[1] = value\n                                break;\n                            default:\n                                break\n                        }\n                    }\n                    \n                    let sc = this.state.statsChartData\n                    sc.datasets[0].data = values\n                    sc.labels = [\"exact match\",\"ambiguous match\",\"no match\"]\n                    console.log(values);\n                    console.log(sc);\n                    me.setState({statsChartData: sc}, () => {\n                        me.setState({chartRedraw: false})\n                    })\n                })\n            }, (error) => {\n                console.log(error);\n            });\n        })\n    }\n\n    generateTTL = (ttlFormData) => {\n        const FileSaver = require('file-saver');\n\n        let TextToBeSend = []\n        let me = this\n        this.state.textResults.forEach((sentence,i) => {\n            let tokenarray = []\n            sentence.forEach((token,x) => {\n                tokenarray.push(me.rifr[\"s\"+i+\"-t\"+x].getTokenData())\n            })\n            TextToBeSend.push(tokenarray)\n        })\n\n\n\n        axios.post(window.apiLiLaTestLinkerSiteUrlPrefix+'generateTTL', {\n            textToProcess: TextToBeSend,\n            formData : ttlFormData\n        }, {\n            responseType: 'text',\n            headers: {\n                'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n            }\n        }).then((response) => {\n            let blob = new Blob([response.data], {type: \"text/plain;charset=utf-8\"});\n            FileSaver.saveAs(blob, ttlFormData.documentTitle+\".ttl\");\n\n        }, (error) => {\n            console.log(error);\n        });\n    }\n\n    loadToTripleStore = (ttlFormData) => {\n\n        let TextToBeSend = []\n        let me = this\n        this.state.textResults.forEach((sentence,i) => {\n            let tokenarray = []\n            sentence.forEach((token,x) => {\n                tokenarray.push(me.rifr[\"s\"+i+\"-t\"+x].getTokenData())\n            })\n            TextToBeSend.push(tokenarray)\n        })\n\n\n        axios.post(window.apiLiLaTestLinkerSiteUrlPrefix+'loadTTLToEndpoint', {\n            textToProcess: TextToBeSend,\n            formData : ttlFormData\n        }, {\n            responseType: 'text',\n            headers: {\n                'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n            }\n        }).then((response) => {\n            console.log(response);\n            if (response.data.length > 0){\n                me.setState({AlertDialogOpen:true,docURI:response.data})\n            }else{\n                alert(\"Something went wrong. Please try again later.\")\n            }\n\n        }, (error) => {\n            console.log(error);\n        });\n    }\n\n\n\n\n    refreshChart = () =>{\n        let sc = this.state.statsChartData\n        sc.datasets[0].data =\n            [\n                document.querySelectorAll(\".direct\").length,\n                document.querySelectorAll(\".ambiguous\").length,\n                document.querySelectorAll(\".missing\").length\n            ]\n        this.setState({statsChartData: sc}, () => {})\n    }\n\n\n    clickOnToken = (tokenObject) => {\n        let me = this\n        // console.log(tokenObject);\n        this.setState({selectedToken: undefined}, () => {\n                me.setState({selectedToken: tokenObject})\n        })\n    }\n\n    refreshLemmaToken = (tokenObject) =>{\n        let me = this\n        this.setState({selectedToken: undefined}, () => {\n            me.setState({selectedToken: tokenObject},()=>{\n                me.refreshChart()\n            })\n\n        })\n    }\n\n    // unlinkLemmaToken = (tokenObject) =>{\n    //     let me = this\n    //     this.setState({selectedToken: undefined}, () => {\n    //         me.setState({selectedToken: tokenObject},()=>{\n    //             me.refreshChart()\n    //         })\n    //\n    //     })\n    // }\n\n\n    componentDidMount() {\n        let me = this\n        window.particlesJS.load('particles-js', 'assets/particles.json')\n        document.getElementById('text_field').addEventListener(\"input\", function (e) {\n            me.setState({textValue: e.target.value}, () => {\n            })\n        })\n\n\n    }\n\n    setRifr =(element,key) =>{\n        this.rifr[key] = element\n    }\n\n    render() {\n\n        return (\n            <div style={{height: \"calc(100vh - 47px)\"}}>\n                <a href=\"https://lila-erc.eu\" style={{position: 'absolute', top: '12px', right: '18px'}}><img src={\"./elements/cropped-lila-logo.png\"} alt={\"LiLa logo\"} style={{width: '70px'}}/></a>\n\n                <div style={{position: 'relative', background: 'inherit', height: \"100%\", overflow: \"hidden\"}}>\n                    <div style={{margin: \"1.2em\", marginTop: \"41px\", height: \"calc(100vh - 150px)\"}}>\n\n                        <h1 className=\"noselect\" style={{backgroundColor: 'transparent', fontFamily: 'moonbold', fontSize: \"2em\", color: \"#fff\", marginRight: '100px'}}>LiLa: Text Linker (&beta;)\n                            {/*<HelpOutline style={{fontSize: \"20px\", color: '#37123C'}} onClick={() => {}}/>*/}\n                        </h1>\n                        <Grid container style={{height: \"100%\"}} spacing={2}>\n                            <Grid item xs={12} sm={this.state.mainWinGridSize[0]} md={this.state.mainWinGridSize[1]}>\n                                <Paper elevation={3} style={{backgroundColor: \"rgba(38, 38, 38, 0.5)\", height: \"100%\", color: \"#fff\", fontFamily: \"monospace\"}}>\n\n                                    <div style={{padding: \"8px\", height: \"100%\"}}>\n                                        <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\"}}>\n                                            <h3>Paste your text below</h3>\n                                            <div className={\"button-container\"}>\n                                                <MyButton size=\"small\" variant=\"outlined\" onClick={(e) => {\n                                                    this.refreshClick(e)\n                                                }} style={{marginLeft: \"6px\"}}>Text</MyButton>\n                                                <MyButton size=\"small\" variant=\"outlined\" onClick={(e) => {\n                                                    this.processClick(e)\n                                                }}>Process</MyButton>\n                                            </div>\n                                        </div>\n\n                                        <textarea id={'text_field'} className={\"textField\"} contentEditable={true} placeholder={\"Text here...\"} value={this.state.textValue}/>\n\n                                        <div id={\"results\"} className={\"text-results\"}>\n                                            {this.state.textResults.map((sentence,i) => {\n                                                 let tokenarray = []\n                                                sentence.forEach((token,x) => {\n                                                    tokenarray.push(<Token ref={element=>this.setRifr(element,\"s\"+i+\"-t\"+x)} data={token} tokenClick={(tokenObject) => this.clickOnToken(tokenObject)} refresh={(tokenObject,lemma)=>this.refreshLemmaToken(tokenObject,lemma) } />)\n                                                })\n                                            return <Sentence ref={\"s\"+i} tokens={tokenarray}/>\n                                        })}\n\n                                        </div>\n                                    </div>\n\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={12} sm={this.state.sideWinGridSize[0]} md={this.state.sideWinGridSize[1]}>\n                                {/*<Paper elevation={3} style={{backgroundColor: \"rgba(255, 255, 255, 0.78)\", height: \"100%\"}}>*/}\n                                <Paper elevation={3} style={{backgroundColor: \"rgba(38, 38, 38, 0.5)\", height: \"100%\", color: \"#fff\", fontFamily: \"monospace\"}}>\n                                    <div style={{padding: \"8px\", height: \"100%\"}}>\n                                        <div style={{display: \"flex\", flexDirection: \"column\"}}>\n                                            <div className={\"sidebar-title-box\"}>\n                                                <h3>LILA KNOWLEDGE BASE </h3>\n                                                <div className={\"button-container\"} style={{width: \"auto\"}}>\n                                                    <MyButton size=\"small\" variant=\"outlined\" onClick={(e) => {\n                                                        this.setState({ttlDialogOpen: true})\n                                                    }}>Linking</MyButton>\n                                                </div>\n                                            </div>\n                                            <div>\n                                                <Doughnut data={this.state.statsChartData} redraw={this.state.chartRedraw} height={150} options={chartOptions}/>\n                                            </div>\n                                            <div style={{marginTop: \"12px\"}}>\n                                                Click a token to show linked data\n                                                <LiLaKnowledge selectedToken={this.state.selectedToken}/>\n                                                {/*<div className={\"sheets-container\"}>*/}\n                                                {/*    {this.state.lemmaSheets.map(sheet => {*/}\n                                                {/*        return <LemmaSheet data={sheet}/>*/}\n                                                {/*    })}*/}\n                                                {/*</div>*/}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Paper>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n\n                <TTLFormDialog open={this.state.ttlDialogOpen} submitTTLForm={(submittedForm) => this.generateTTL(submittedForm)}  submitToTriplesore={(submittedForm) => this.loadToTripleStore(submittedForm)}  handleClose={(open) => this.setState({ttlDialogOpen: !open})}/>\n                <AlertDialog open={this.state.AlertDialogOpen} documentURI = {this.state.docURI}/>\n                <footer className={\"footer\"} style={{paddingTop: '10px'}}>\n                    <Copyright/>\n                </footer>\n            </div>\n\n        );\n    }\n}\n\n\nexport default withStyles(styles)(MainView);","import './App.css';\nimport MainView from \"./Views/MainView\";\n\n\n\nfunction App() {\n  return (\n    <MainView/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nconst uuidv4 = require('uuid/v4');\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nwindow.theTimeStamp = uuidv4();\n// window.apiLiLaTestLinkerSiteUrlPrefix = \"http://localhost:8080/LiLaTextLinker/\"\n// window.apiLiLaTestLinkerSiteUrlPrefix = \"http://localhost:8080/LiLa_text_linker_war/\"\nwindow.apiLiLaTestLinkerSiteUrlPrefix = \"\"\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}